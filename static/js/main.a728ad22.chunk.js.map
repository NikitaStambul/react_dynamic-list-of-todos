{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helpers/findTodoById.ts","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelect","className","map","todo","isSelected","id","classNames","completed","title","type","onClick","TodoFilter","onFilter","useState","query","setQuery","selectedFilter","setSelected","useEffect","filteredTodos","filter","lowecasedQuery","toLocaleLowerCase","fitsQuery","includes","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","headers","json","reject","Error","status","statusText","catch","err","window","console","warn","Loader","TodoModal","unselect","user","setUser","isLoading","setIsLoading","userId","apiUser","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","setSelectedTodoId","selectedTodo","find","findTodoById","apiTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a728ad22.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number;\n  onSelect: React.Dispatch<React.SetStateAction<number>>;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const isSelected = todo.id === selectedTodoId;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': isSelected,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                {todo.completed\n                  ? (<p className=\"has-text-success\">{todo.title}</p>)\n                  : (<p className=\"has-text-danger\">{todo.title}</p>)}\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelect(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('far', {\n                        'fa-eye-slash': isSelected,\n                        'fa-eye': !isSelected,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onFilter: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, onFilter }) => {\n  const [query, setQuery] = useState('');\n  const [selectedFilter, setSelected] = useState('all');\n\n  useEffect(() => {\n    const filteredTodos = todos\n      .filter(todo => {\n        const lowecasedQuery = query.toLocaleLowerCase();\n        const lowercasedTitle = todo.title.toLocaleLowerCase();\n        const fitsQuery = lowercasedTitle.includes(lowecasedQuery);\n\n        switch (selectedFilter) {\n          case 'active':\n            return !todo.completed && fitsQuery;\n          case 'completed':\n            return todo.completed && fitsQuery;\n          default:\n            return fitsQuery;\n        }\n      });\n\n    onFilter(filteredTodos);\n  }, [query, selectedFilter]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={(event) => {\n              setSelected(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          placeholder=\"Search...\"\n          onChange={(event => {\n            setQuery(event.target.value);\n          })}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        return Promise.reject(new Error(`${res.status} - ${res.statusText}`));\n      }\n\n      if (!res.headers.get('Content-Type')?.includes('application/json')) {\n        return Promise.reject(new Error('Content-Type is not json'));\n      }\n\n      return res.json();\n    })\n    .catch(err => {\n      window.console.warn(err);\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  unselect: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, unselect }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(apiUser => {\n        setUser(apiUser);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={unselect}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n              {user\n                ? (\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                ) : (\n                  'Unknown user'\n                )}\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { findTodoById } from './helpers/findTodoById';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  const selectedTodo = findTodoById(selectedTodoId, visibleTodos);\n\n  useEffect(() => {\n    getTodos()\n      .then(apiTodos => {\n        setTodos(apiTodos);\n        setVisibleTodos(apiTodos);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                onFilter={setVisibleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelect={setSelectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        selectedTodo !== null\n          && (\n            <TodoModal\n              todo={selectedTodo}\n              unselect={() => setSelectedTodoId(0)}\n            />\n          )\n      }\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport function findTodoById(id: number, todos: Todo[]) {\n  return todos.find(todo => todo.id === id) || null;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}